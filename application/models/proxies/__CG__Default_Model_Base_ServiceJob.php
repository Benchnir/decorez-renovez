<?php

namespace App\Proxies\__CG__;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class Default_Model_Base_ServiceJob extends \Default_Model_Base_ServiceJob implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int) $this->_identifier["id"];
        }
        $this->__load();
        return parent::getId();
    }

    public function setEvaluation($evaluation)
    {
        $this->__load();
        return parent::setEvaluation($evaluation);
    }

    public function getEvaluation()
    {
        $this->__load();
        return parent::getEvaluation();
    }

    public function setPrice1($price1)
    {
        $this->__load();
        return parent::setPrice1($price1);
    }

    public function getPrice1()
    {
        $this->__load();
        return parent::getPrice1();
    }

    public function setPrice2($price2)
    {
        $this->__load();
        return parent::setPrice2($price2);
    }

    public function getPrice2()
    {
        $this->__load();
        return parent::getPrice2();
    }

    public function setPrice3($price3)
    {
        $this->__load();
        return parent::setPrice3($price3);
    }

    public function getPrice3()
    {
        $this->__load();
        return parent::getPrice3();
    }

    public function setCreatedAt($createdAt)
    {
        $this->__load();
        return parent::setCreatedAt($createdAt);
    }

    public function getCreatedAt()
    {
        $this->__load();
        return parent::getCreatedAt();
    }

    public function setUpdatedAt($updatedAt)
    {
        $this->__load();
        return parent::setUpdatedAt($updatedAt);
    }

    public function getUpdatedAt()
    {
        $this->__load();
        return parent::getUpdatedAt();
    }

    public function setJob(\Default_Model_Base_Job $job = NULL)
    {
        $this->__load();
        return parent::setJob($job);
    }

    public function getJob()
    {
        $this->__load();
        return parent::getJob();
    }

    public function setService(\Default_Model_Base_Service $service = NULL)
    {
        $this->__load();
        return parent::setService($service);
    }

    public function getService()
    {
        $this->__load();
        return parent::getService();
    }

    public function _prePersist()
    {
        $this->__load();
        return parent::_prePersist();
    }

    public function _preUpdate()
    {
        $this->__load();
        return parent::_preUpdate();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'evaluation', 'price1', 'price2', 'price3', 'created_at', 'updated_at', 'job', 'service');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields AS $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}